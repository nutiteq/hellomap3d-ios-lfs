/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTBitmap.h"
#import "NTBillboardStyleBuilder.h"
#import "NTMarkerStyle.h"

/**
 * A builder class for MarkerStyle.
 */
__attribute__ ((visibility("default"))) @interface NTMarkerStyleBuilder : NTBillboardStyleBuilder
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Constructs a MarkerStyleBuilder object with all parameters set to defaults.
 */
-(id)init;
/**
 * Returns the horizontal anchor point of the marker.<br>
 * @return The horizontal anchor point of the marker.
 */
-(float)getAnchorPointX;
/**
 * Sets the horizontal anchor point of the marker.<br>
 * @param anchorPointX The new horizontal anchor point for the marker. -1 means the left side,<br>
 * 0 the center and 1 the right side of the marker. The default is 0.
 */
-(void)setAnchorPointX: (float)anchorPointX;
/**
 * Returns the vertical anchor point of the marker.<br>
 * @return The vertical anchor point of the marker.
 */
-(float)getAnchorPointY;
/**
 * Sets the vertical anchor point of the marker.<br>
 * @param anchorPointY The vertical anchor point for the marker. -1 means the bottom,<br>
 * 0 the center and 1 the top of the marker. The default is -1.
 */
-(void)setAnchorPointY: (float)anchorPointY;
/**
 * Sets the anchor point for the marker. Values will be clamped to [-1, 1] range.<br>
 * @param anchorPointX The new horizontal anchor point for the marker. -1 means the left side,<br>
 * 0 the center and 1 the right side of the marker. The default is 0.<br>
 * @param anchorPointY The vertical anchor point for the marker. -1 means the bottom,<br>
 * 0 the center and 1 the top of the marker. The default is -1.
 */
-(void)setAnchorPointX: (float)anchorPointX anchorPointY: (float)anchorPointY;
/**
 * Returns the bitmap of the marker.<br>
 * @return The bitmap of the marker.
 */
-(NTBitmap*)getBitmap;
/**
 * Sets the bitmap that will be used for drawing the marker. The default is "default_marker.png".<br>
 * @param bitmap The new bitmap for the marker.
 */
-(void)setBitmap: (NTBitmap*)bitmap;
/**
 * Returns the orientation mode of the marker.<br>
 * @return The orientation mode of the marker.
 */
-(enum NTBillboardOrientation)getOrientationMode;
/**
 * Sets the orientation mode for the marker. The default is BillboardOrientation::FACE_CAMERA_BILLBOARD.<br>
 * @return The new orientation mode for the marker.
 */
-(void)setOrientationMode: (enum NTBillboardOrientation)orientationMode;
/**
 * Returns the scaling mode of the marker.<br>
 * @return The scaling mode of the marker.
 */
-(enum NTBillboardScaling)getScalingMode;
/**
 * Sets the scaling mode for the marker. The default is BillboardScaling::CONST_SCREEN_SIZE.<br>
 * @return The new scaling mode for the marker.
 */
-(void)setScalingMode: (enum NTBillboardScaling)scalingMode;
/**
 * Returns the size of the marker.<br>
 * @return The size of the marker, units depend on the scaling mode.
 */
-(float)getSize;
/**
 * Sets the size for the marker. The units depend on the scaling mode, if it's set to BillboardScaling::WORLD_SIZE,<br>
 * the size is in meters near the equator, the size will not be stretched near the poles. If it's set to<br>
 * BillboardScaling::SCREEN_SIZE or BillboardScaling::CONST_SCREEN_SIZE then the size is in screen density<br>
 * independent pixels (dp or dip) or normal pixels, depending whether setScaleWithDPI was set to true or false<br>
 * respectively. If set to -1, unpadded bitmap width will be used instead. The default is -1.<br>
 * @param size The new marker size.
 */
-(void)setSize: (float)size;
/**
 * Builds a new instance of the MarkerStyle object using previously set parameters.<br>
 * @return A new MarkerStyle object.
 */
-(NTMarkerStyle*)buildStyle;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

