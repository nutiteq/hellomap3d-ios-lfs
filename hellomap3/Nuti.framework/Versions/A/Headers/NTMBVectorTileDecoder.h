/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTColor.h"
#import "NTMBVectorTileStyleSet.h"
#import "NTVectorTileDecoder.h"
#import "NTUnsignedCharVector.h"

/**
 * Decoder for vector tiles in MapBox format.
 */
__attribute__ ((visibility("default"))) @interface NTMBVectorTileDecoder : NTVectorTileDecoder
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Constructs decoder for MapBox vector tiles based on specified style set.<br>
 * If the style set contains multiple styles, the first one (based on lexicographical order) from the root folder is chosen as the current style.<br>
 * @param styleSet Style set for the tiles.
 */
-(id)initWithStyleSet: (NTMBVectorTileStyleSet*)styleSet;
/**
 * Constructs decoder for MapBox vector tiles based on specified style set.<br>
 * Specified style is selected as the current style.<br>
 * @param styleSet Style set for the tiles.<br>
 * @param styleName Style to select.
 */
-(id)initWithStyleSet: (NTMBVectorTileStyleSet*)styleSet styleName: (NSString*)styleName;
/**
 * Returns the current style name.<br>
 * @return The current style name.
 */
-(NSString*)getCurrentStyleName;
/**
 * Select current style by style name. The style must exist in the <br>
 * style set container specified in the constructor as an xml file.<br>
 * This call will also reset style-related parameters, like geometry and billboard scales of the decoder.<br>
 * @param styleName style to use
 */
-(void)setCurrentStyle: (NSString*)styleName;
/**
 * Sets a style parameter to specified boolean value.<br>
 * The style parameter must be declared in the current style.<br>
 * @param param The parameter to set.<br>
 * @param value The value for the parameter.
 */
-(void)setStyleBoolParameter: (NSString*)param value: (BOOL)value;
/**
 * Sets a style parameter to specified integer value.<br>
 * The style parameter must be declared in the current style.<br>
 * @param param The parameter to set.<br>
 * @param value The value for the parameter.
 */
-(void)setStyleIntParameter: (NSString*)param value: (long long)value;
/**
 * Sets a style parameter to specified floating point value.<br>
 * The style parameter must be declared in the current style.<br>
 * @param param The parameter to set.<br>
 * @param value The value for the parameter.
 */
-(void)setStyleFloatParameter: (NSString*)param value: (double)value;
/**
 * Sets a style parameter to specified string value.<br>
 * The style parameter must be declared in the current style.<br>
 * @param param The parameter to set.<br>
 * @param value The value for the parameter.
 */
-(void)setStyleStringParameter: (NSString*)param value: (NSString*)value;
-(int)getMinZoom;
-(int)getMaxZoom;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

