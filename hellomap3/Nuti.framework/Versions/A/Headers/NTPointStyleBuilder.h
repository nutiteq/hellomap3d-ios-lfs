/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTBitmap.h"
#import "NTPointStyle.h"
#import "NTStyleBuilder.h"

/**
 * A builder class for PointStyle.
 */
__attribute__ ((visibility("default"))) @interface NTPointStyleBuilder : NTStyleBuilder
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Constructs a PointStyleBuilder object with all parameters set to defaults.
 */
-(id)init;
/**
 * Returns the bitmap of the point.<br>
 * @return The bitmap of the point.
 */
-(NTBitmap*)getBitmap;
/**
 * Sets the bitmap that will be used for drawing the point. The default is "default_point.png".<br>
 * @param bitmap The new bitmap for the point.
 */
-(void)setBitmap: (NTBitmap*)bitmap;
/**
 * Returns the size of the point used for click detection.<br>
 * @return The size of the point used for click detection.
 */
-(float)getClickSize;
/**
 * Sets the size for the point that will be used for click detection.<br>
 * Units are screen density independent pixels (DP or DIP). If set to -1 the click size will be<br>
 * calculated automatically. The default is -1.<br>
 * @param size The new point size in dp.
 */
-(void)setClickSize: (float)size;
/**
 * Returns the size of the point.<br>
 * @return The size of the point.
 */
-(float)getSize;
/**
 * Sets the size for the point in screen density independent pixels (DP or DIP). The default is 20.<br>
 * @param size The new point size in dp.
 */
-(void)setSize: (float)size;
/**
 * Builds a new instance of the PointStyle object using previously set parameters.<br>
 * @return A new PointStyle object.
 */
-(NTPointStyle*)buildStyle;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

